apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "home-assistant-matter-server.fullname" . }}
  labels:
    {{- include "home-assistant-matter-server.labels" . | nindent 4 }}
spec:
  replicas: 1
  serviceName: {{ include "home-assistant-matter-server.fullname" . }}
  selector:
    matchLabels:
      {{- include "home-assistant-matter-server.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "home-assistant-matter-server.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      hostname: {{ include "home-assistant-matter-server.fullname" . }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "home-assistant-matter-server.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            allowPrivilegeEscalation: true
            readOnlyRootFilesystem: true
            seccompProfile:
              type: RuntimeDefault
            runAsUser: 0
            runAsGroup: 0
            runAsNonRoot: false
            privileged: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --storage-path
            - /data
            - --paa-root-cert-dir
            - /data/credentials
            - --log-level-sdk
            - progress
            - --bluetooth-adapter
            - {{ .Values.bluetoothCommissioning.enabled | ternary "1" "0" | quote }}
            - --primary-interface
            - {{ required "networkInterface not set. A valid network interface has to be provided." .Values.networkInterface}}
          ports:
            - name: http
              containerPort: 5580
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: tmp
              mountPath: /tmp
          {{- if .Values.bluetoothCommissioning.enabled }}
            - name: dbus
              mountPath: /run/dbus
          {{- end }}
          {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
      {{- if .Values.bluetoothCommissioning.enabled }}
        - name: dbus
          hostPath:
            path: /run/dbus
      {{- end }}
      {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "home-assistant-matter-server.selectorLabels" . | nindent 10 }}
          app.kubernetes.io/managed-by: {{ .Release.Service }}
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- with .Values.persistence.storageClassName }}
        storageClassName: {{ . }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
